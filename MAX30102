#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>
#include <WiFiClient.h>
#include <ArduinoJson.h>
#include <time.h>

#include "MAX30105.h"
#include "heartRate.h"

// WiFi credentials
const char* ssid = "himanshu";
const char* password = "12345678";

// Server configuration
const char* serverURL = "http://192.168.1.100:3001/device";

// Device configuration
String deviceId = "ESP8266-MAX30102";

// Timing
unsigned long lastReading = 0;
const unsigned long readingInterval = 30000; // 30 seconds

MAX30105 particleSensor;

void setup() {
  Serial.begin(115200);
  Serial.println("MAX30102 Heart Rate & SpO2 Starting...");

  if (!particleSensor.begin(Wire, I2C_SPEED_STANDARD)) {
    Serial.println("MAX30102 not found. Check wiring.");
    while (1);
  }
  particleSensor.setup();
  particleSensor.setPulseAmplitudeRed(0x0A);
  particleSensor.setPulseAmplitudeGreen(0);

  // Connect to WiFi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nWiFi Connected!");

  // Initialize time
  configTime(0, 0, "pool.ntp.org");
  while (time(nullptr) < 8 * 3600 * 2) {
    delay(500);
  }

  Serial.println("\n=== DEVICE INFO ===");
  Serial.println("Device ID: " + deviceId);
  Serial.println("===================\n");
}

void loop() {
  if (millis() - lastReading >= readingInterval) {
    readAndSendHeartData();
    lastReading = millis();
  }
}

void readAndSendHeartData() {
  long irValue = particleSensor.getIR();
  int bpm = 0;
  int spo2 = 0;

  if (checkForBeat(irValue)) {
    static unsigned long lastBeat = 0;
    unsigned long delta = millis() - lastBeat;
    lastBeat = millis();
    bpm = 60 / (delta / 1000.0);

    spo2 = map(irValue, 50000, 100000, 90, 100); // Demo mapping
  }

  Serial.print("BPM: ");
  Serial.print(bpm);
  Serial.print("  SpO2: ");
  Serial.println(spo2);

  // Create JSON
  DynamicJsonDocument doc(512);
  doc["device_id"] = deviceId;

  time_t now = time(nullptr);
  struct tm* timeinfo = gmtime(&now);
  char timestamp[32];
  strftime(timestamp, sizeof(timestamp), "%Y-%m-%dT%H:%M:%SZ", timeinfo);
  doc["timestamp"] = timestamp;

  JsonObject data = doc.createNestedObject("data");
  data["temperature_f"] = 0;
  data["heart_rate_bpm"] = bpm;
  data["spo2_percent"] = spo2;
  data.createNestedArray("ecg_mV");

  String jsonString;
  serializeJson(doc, jsonString);

  if (WiFi.status() == WL_CONNECTED) {
    WiFiClient client;
    HTTPClient http;

    http.begin(client, serverURL);
    http.addHeader("Content-Type", "application/json");

    int responseCode = http.POST(jsonString);

    if (responseCode == 200) {
      Serial.println("✓ Data sent successfully");
    } else {
      Serial.println("✗ Send failed: " + String(responseCode));
    }

    http.end();
  }
}
